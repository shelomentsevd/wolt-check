// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: venues.sql

package postgres

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createVenue = `-- name: CreateVenue :one
INSERT INTO venues (name,
                    seller_id)
VALUES ($1, $2)
ON CONFLICT (name) DO UPDATE SET name = EXCLUDED.name
RETURNING id
`

type CreateVenueParams struct {
	Name     string
	SellerID pgtype.Int4
}

func (q *Queries) CreateVenue(ctx context.Context, arg CreateVenueParams) (int, error) {
	row := q.db.QueryRow(ctx, createVenue, arg.Name, arg.SellerID)
	var id int
	err := row.Scan(&id)
	return id, err
}

const getVenueByName = `-- name: GetVenueByName :one
SELECT id, name, seller_id
FROM venues
WHERE name = $1
LIMIT 1
`

func (q *Queries) GetVenueByName(ctx context.Context, name string) (Venue, error) {
	row := q.db.QueryRow(ctx, getVenueByName, name)
	var i Venue
	err := row.Scan(&i.ID, &i.Name, &i.SellerID)
	return i, err
}
