// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: receipts.sql

package postgres

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createReceipt = `-- name: CreateReceipt :one
INSERT INTO receipts (id,
                      date,
                      seller_id,
                      venue_id,
                      total,
                      tips)
VALUES ($1, $2, $3, $4, $5, $6)
ON CONFLICT (id) DO UPDATE SET date      = EXCLUDED.date,
                               seller_id = EXCLUDED.seller_id,
                               venue_id  = EXCLUDED.venue_id,
                               total     = EXCLUDED.total,
                               tips      = EXCLUDED.tips
RETURNING id, date, seller_id, venue_id, total, tips
`

type CreateReceiptParams struct {
	ID       string
	Date     pgtype.Timestamp
	SellerID int
	VenueID  int
	Total    pgtype.Numeric
	Tips     pgtype.Numeric
}

func (q *Queries) CreateReceipt(ctx context.Context, arg CreateReceiptParams) (Receipt, error) {
	row := q.db.QueryRow(ctx, createReceipt,
		arg.ID,
		arg.Date,
		arg.SellerID,
		arg.VenueID,
		arg.Total,
		arg.Tips,
	)
	var i Receipt
	err := row.Scan(
		&i.ID,
		&i.Date,
		&i.SellerID,
		&i.VenueID,
		&i.Total,
		&i.Tips,
	)
	return i, err
}
